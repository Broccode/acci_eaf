[versions]
# From root build.gradle.kts
kotlin = "2.0.21"
springBoot = "3.3.1"
junit = "5.11.4"
junitPlatform = "1.11.4"
mockk = "1.13.12"
springMockk = "4.0.2"
testcontainers = "1.19.7"
archunit = "1.3.0"
assertj = "3.24.2"
postgresql = "42.7.7"
flyway = "10.8.1"
hikari = "5.1.0"
jackson = "2.16.1"
nats = "2.17.2"
nimbusJose = "9.37.3"
slf4j = "2.0.9"
kotlinCoroutines = "1.8.1"
jakartaServlet = "6.0.0"
hilla = "2.5.8"
vaadin = "24.4.12"
spotless = "7.0.0.BETA4"
ktlint = "1.3.1"
okhttp = "4.12.0"
picocli = "4.7.5"
commonsLang = "3.12.0"
springDependencyManagement = "1.1.6"

[libraries]
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinCoroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinCoroutines" }

# Spring Boot
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure" }
spring-boot = { module = "org.springframework.boot:spring-boot" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-test" }
spring-boot-test-autoconfigure = { module = "org.springframework.boot:spring-boot-test-autoconfigure" }


# Spring Framework
spring-context = { module = "org.springframework:spring-context" }
spring-web = { module = "org.springframework:spring-web" }
spring-webmvc = { module = "org.springframework:spring-webmvc" }
spring-webflux = { module = "org.springframework:spring-webflux" }
spring-jdbc = { module = "org.springframework:spring-jdbc" }
spring-tx = { module = "org.springframework:spring-tx" }
spring-test = { module = "org.springframework:spring-test" }

# Spring Security
spring-security-core = { module = "org.springframework.security:spring-security-core" }
spring-security-web = { module = "org.springframework.security:spring-security-web" }
spring-security-config = { module = "org.springframework.security:spring-security-config" }
spring-security-test = { module = "org.springframework.security:spring-security-test" }
spring-security-oauth2-jose = { module = "org.springframework.security:spring-security-oauth2-jose" }
spring-security-oauth2-resource-server = { module = "org.springframework.security:spring-security-oauth2-resource-server" }


# Database & Persistence
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
h2 = { module = "com.h2database:h2" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
hikariCP = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }

# NATS
nats-client = { module = "io.nats:jnats", version.ref = "nats" }

# JSON Processing
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson"}

# Testing
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
spring-mockk = { module = "com.ninja-squad:springmockk", version.ref = "springMockk" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
archunit-junit5 = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

# Logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

# Misc
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakartaServlet" }
nimbus-jose-jwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbusJose" }
picocli = { module = "info.picocli:picocli", version.ref = "picocli" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang" }
vaadin-spring-boot-starter = { module = "com.vaadin:vaadin-spring-boot-starter", version.ref = "vaadin" }
reactor-netty-http = { module = "io.projectreactor.netty:reactor-netty-http" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
vaadin = { id = "com.vaadin", version.ref = "vaadin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
