[versions]
# From root build.gradle.kts
kotlin = "2.0.21"
springBoot = "3.5.3"
junit = "5.12.2"
junitPlatform = "1.12.2"
mockk = "1.14.4"
springMockk = "4.0.2"
testcontainers = "1.21.2"
archunit = "1.4.1"
assertj = "3.27.3"
postgresql = "42.7.7"
flyway = "11.9.2"
hikari = "6.3.0"
jackson = "2.19.1"
nats = "2.21.2"
nimbusJose = "10.3"
slf4j = "2.0.17"
kotlinCoroutines = "1.10.2"
jakartaServlet = "6.0.0"
hilla = "2.4.10"
vaadin = "24.8.0"
ktlint = "1.5.0"
okhttp = "4.12.0"
picocli = "4.7.7"
commonsLang = "3.17.0"
springDependencyManagement = "1.1.6"
micrometer = "1.15.1"
resilience4j = "2.1.0"
logstashLogback = "8.1"
ktlintGradle = "13.0.0-rc.1"
detekt = "1.23.8"
axon = "4.11.2"
jmh = "1.37"

[libraries]
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinCoroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinCoroutines" }

# Spring Boot
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "springBoot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure" }
spring-boot = { module = "org.springframework.boot:spring-boot" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-test" }
spring-boot-test-autoconfigure = { module = "org.springframework.boot:spring-boot-test-autoconfigure" }


# Spring Framework
spring-context = { module = "org.springframework:spring-context" }
spring-web = { module = "org.springframework:spring-web" }
spring-webmvc = { module = "org.springframework:spring-webmvc" }
spring-webflux = { module = "org.springframework:spring-webflux" }
spring-jdbc = { module = "org.springframework:spring-jdbc" }
spring-tx = { module = "org.springframework:spring-tx" }
spring-test = { module = "org.springframework:spring-test" }

# Spring Security
spring-security-core = { module = "org.springframework.security:spring-security-core" }
spring-security-web = { module = "org.springframework.security:spring-security-web" }
spring-security-config = { module = "org.springframework.security:spring-security-config" }
spring-security-test = { module = "org.springframework.security:spring-security-test" }
spring-security-oauth2-jose = { module = "org.springframework.security:spring-security-oauth2-jose" }
spring-security-oauth2-resource-server = { module = "org.springframework.security:spring-security-oauth2-resource-server" }


# Database & Persistence
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
h2 = { module = "com.h2database:h2" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
hikariCP = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }

# NATS
nats-client = { module = "io.nats:jnats", version.ref = "nats" }

# JSON Processing
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson"}

# Testing
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junitPlatform" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-agent-jvm = { module = "io.mockk:mockk-agent-jvm", version.ref = "mockk" }
spring-mockk = { module = "com.ninja-squad:springmockk", version.ref = "springMockk" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
archunit-junit5 = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

# Logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstashLogback" }

# Monitoring & Metrics
micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }
resilience4j-spring-boot2 = { module = "io.github.resilience4j:resilience4j-spring-boot2", version.ref = "resilience4j" }
resilience4j-micrometer = { module = "io.github.resilience4j:resilience4j-micrometer", version.ref = "resilience4j" }

# Axon Framework - Individual modules for v5 compatibility
axon-messaging = { module = "org.axonframework:axon-messaging", version.ref = "axon" }
axon-modelling = { module = "org.axonframework:axon-modelling", version.ref = "axon" }
axon-eventsourcing = { module = "org.axonframework:axon-eventsourcing", version.ref = "axon" }
axon-server-connector = { module = "org.axonframework:axon-server-connector", version.ref = "axon" }
axon-test = { module = "org.axonframework:axon-test", version.ref = "axon" }

# Performance Testing (JMH)
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-generator-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }

# Misc
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakartaServlet" }
nimbus-jose-jwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbusJose" }
picocli = { module = "info.picocli:picocli", version.ref = "picocli" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang" }
vaadin-spring-boot-starter = { module = "com.vaadin:vaadin-spring-boot-starter", version.ref = "vaadin" }
hilla-spring-boot-starter = { module = "com.vaadin:hilla-spring-boot-starter", version.ref = "hilla" }
reactor-netty-http = { module = "io.projectreactor.netty:reactor-netty-http" }
mockk-dsl-jvm = { module = "io.mockk:mockk-dsl-jvm", version.ref = "mockk" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
vaadin = { id = "com.vaadin", version.ref = "vaadin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintGradle" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
